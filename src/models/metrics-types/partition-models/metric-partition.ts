import { Dimension, MetricValueUnit } from '../common';
import { BasePartition, TimeRange } from './common';

/**
 * partition aggregated metrics, generated by metrics partitioned every day
 */
export interface MetricPartition extends BasePartition {
  readonly by: 'metric';
  readonly _v: 1;

  readonly namespace: string;
  readonly metricName: string;

  readonly unit: MetricValueUnit;
  readonly period: number;
  readonly timeRange: TimeRange;

  /**
   * should be called dimensionsAggregation
   */
  readonly dimensionsPartitions: DimensionsAggregation[];
}

export interface DimensionsAggregation {
  readonly dimensions: Dimension[];
  readonly datapoints: DataPoint[];
}

export interface DataPoint {
  readonly t: number;
  readonly v: number[];
}
